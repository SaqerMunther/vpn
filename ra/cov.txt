 java.util.TimerThread.run(Timer.java:505)
17-Mar-2025 08:05:27.366 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RADAR] appears to have started a thread named [Statistics Thread-__DEFAULT__-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
17-Mar-2025 08:05:27.369 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RADAR] appears to have started a thread named [pool-230-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
17-Mar-2025 08:05:27.372 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RADAR] appears to have started a thread named [pool-231-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
17-Mar-2025 08:05:27.717 INFO [localhost-startStop-13] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/data/tomcat/apache-tomcat-8.5.82/webapps/RADAR.war]
17-Mar-2025 08:05:36.330 INFO [localhost-startStop-13] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
08:05:37.122 [localhost-startStop-13] INFO  c.j.d.datasource.HibernateDataSource - Hibernate: start configurations
08:05:37.354 [localhost-startStop-13] INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.3.7.Final}
08:05:37.360 [localhost-startStop-13] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
08:05:37.691 [localhost-startStop-13] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
08:05:38.066 [https-jsse-nio-8443-exec-1289] INFO  com.arabbank.devf.cmon.Controller - init()
08:05:38.081 [https-jsse-nio-8443-exec-1289] INFO  com.arabbank.devf.cmon.Controller - selectedCountries =in ('JORDAN','PALESTINE','EGYPT','UAE')
08:05:38.081 [https-jsse-nio-8443-exec-1289] INFO  com.arabbank.devf.cmon.Controller - selectedAllCountries =in ('JORDAN','PALESTINE','EGYPT','UAE')
08:05:38.111 [localhost-startStop-13] INFO  o.h.c.i.C3P0ConnectionProvider - HHH010002: C3P0 using driver: oracle.jdbc.driver.OracleDriver at URL: jdbc:oracle:thin:@10.1.72.77:1599:contdr
08:05:38.111 [localhost-startStop-13] INFO  o.h.c.i.C3P0ConnectionProvider - HHH10001001: Connection properties: {user=abportal, password=****, autocommit=true, v$session.program=SmartCloud/RADAR}
08:05:38.111 [localhost-startStop-13] INFO  o.h.c.i.C3P0ConnectionProvider - HHH10001003: Autocommit mode: true
08:05:38.172 [localhost-startStop-13] WARN  o.h.c.i.C3P0ConnectionProvider - HHH010001: Both hibernate-style property 'hibernate.c3p0.timeout' and c3p0-style property 'hibernate.c3p0.maxIdleTime' have been set in Hibernate properties.  Hibernate-style property 'hibernate.c3p0.timeout' will be used and c3p0-style property 'hibernate.c3p0.maxIdleTime' will be ignored!
08:05:38.173 [localhost-startStop-13] WARN  o.h.c.i.C3P0ConnectionProvider - HHH010001: Both hibernate-style property '' and c3p0-style property 'hibernate.c3p0.initialPoolSize' have been set in Hibernate properties.  Hibernate-style property '' will be used and c3p0-style property 'hibernate.c3p0.initialPoolSize' will be ignored!
08:05:38.203 [MLog-Init-Reporter] INFO  com.mchange.v2.log.MLog - MLog clients using slf4j logging.
17-Mar-2025 08:05:38.333 INFO [pool-223-thread-1] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [java.util.HashMap$KeySet]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
        java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [java.util.HashMap$KeySet]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
                at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1440)
                at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1428)
                at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1267)
                at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1228)
                at ch.qos.logback.classic.spi.PackagingDataCalculator.loadClass(PackagingDataCalculator.java:204)
                at ch.qos.logback.classic.spi.PackagingDataCalculator.bestEffortLoadClass(PackagingDataCalculator.java:222)
                at ch.qos.logback.classic.spi.PackagingDataCalculator.computeBySTEP(PackagingDataCalculator.java:135)
                at ch.qos.logback.classic.spi.PackagingDataCalculator.populateFrames(PackagingDataCalculator.java:100)
                at ch.qos.logback.classic.spi.PackagingDataCalculator.calculate(PackagingDataCalculator.java:58)
                at ch.qos.logback.classic.spi.ThrowableProxy.calculatePackagingData(ThrowableProxy.java:142)
                at ch.qos.logback.classic.spi.LoggingEvent.<init>(LoggingEvent.java:122)
                at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:419)
                at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383)
                at ch.qos.logback.classic.Logger.debug(Logger.java:498)
                at com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$DebugLogger.log(Slf4jMLog.java:207)
                at com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger.log(Slf4jMLog.java:256)
                at com.mchange.v2.c3p0.impl.NewPooledConnection.handleThrowable(NewPooledConnection.java:503)
                at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:372)
                at com.jk.db.dataaccess.core.JKDataAccessImpl.getList(JKDataAccessImpl.java:838)
                at com.arabbank.dev.atm.dashboard.dao.CMonGeneralDao.getList(CMonGeneralDao.java:160)
                at com.app.dev.cmon.controllers.DataAccess.getCoveragePerWeekCache(DataAccess.java:1124)
                at com.app.dev.cmon.cache.CacheService.lambda$null$5(CacheService.java:105)
                at java.util.HashMap$KeySet.forEach(HashMap.java:934)
                at com.app.dev.cmon.cache.CacheService.lambda$null$6(CacheService.java:101)
                at java.util.Arrays$ArrayList.forEach(Arrays.java:3880)
                at com.app.dev.cmon.cache.CacheService.lambda$refreshAllCacheData$7(CacheService.java:100)
                at java.util.Arrays$ArrayList.forEach(Arrays.java:3880)
                at com.app.dev.cmon.cache.CacheService.refreshAllCacheData(CacheService.java:99)
                at com.app.dev.cmon.cache.CacheService.lambda$startAutoRefresh$15(CacheService.java:231)
                at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
                at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
                at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
                at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
                at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
                at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
                at java.lang.Thread.run(Thread.java:750)
17-Mar-2025 08:05:38.334 INFO [pool-223-thread-1] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [java.util.HashMap$KeySet]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
        java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [java.util.HashMap$KeySet]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
                at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1440)
                at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1428)
                at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1267)
                at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1228)
                at java.lang.Class.forName0(Native Method)
                at java.lang.Class.forName(Class.java:264)
                at ch.qos.logback.classic.spi.PackagingDataCalculator.bestEffortLoadClass(PackagingDataCalculator.java:235)
                at ch.qos.logback.classic.spi.PackagingDataCalculator.computeBySTEP(PackagingDataCalculator.java:135)
                at ch.qos.logback.classic.spi.PackagingDataCalculator.populateFrames(PackagingDataCalculator.java:100)
                at ch.qos.logback.classic.spi.PackagingDataCalculator.calculate(PackagingDataCalculator.java:58)
                at ch.qos.logback.classic.spi.ThrowableProxy.calculatePackagingData(ThrowableProxy.java:142)
                at ch.qos.logback.classic.spi.LoggingEvent.<init>(LoggingEvent.java:122)
                at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:419)
                at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383)
                at ch.qos.logback.classic.Logger.debug(Logger.java:498)
                at com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$DebugLogger.log(Slf4jMLog.java:207)
                at com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger.log(Slf4jMLog.java:256)
                at com.mchange.v2.c3p0.impl.NewPooledConnection.handleThrowable(NewPooledConnection.java:503)
                at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:372)
                at com.jk.db.dataaccess.core.JKDataAccessImpl.getList(JKDataAccessImpl.java:838)
                at com.arabbank.dev.atm.dashboard.dao.CMonGeneralDao.getList(CMonGeneralDao.java:160)
                at com.app.dev.cmon.controllers.DataAccess.getCoveragePerWeekCache(DataAccess.java:1124)
                at com.app.dev.cmon.cache.CacheService.lambda$null$5(CacheService.java:105)
                at java.util.HashMap$KeySet.forEach(HashMap.java:934)
                at com.app.dev.cmon.cache.CacheService.lambda$null$6(CacheService.java:101)
                at java.util.Arrays$ArrayList.forEach(Arrays.java:3880)
                at com.app.dev.cmon.cache.CacheService.lambda$refreshAllCacheData$7(CacheService.java:100)
                at java.util.Arrays$ArrayList.forEach(Arrays.java:3880)
                at com.app.dev.cmon.cache.CacheService.refreshAllCacheDat  



Message:com.app.dev.cmon.components.ViewInfo cannot be cast to java.util.List
Technical description for the problem:
Type of the exception: java.lang.ClassCastException:Throwable instance: java.lang.ClassCastException: com.app.dev.cmon.components.ViewInfo cannot be cast to java.util.ListException message: com.app.dev.cmon.components.ViewInfo cannot be cast to java.util.ListStack trace: java.lang.ClassCastException: com.app.dev.cmon.components.ViewInfo cannot be cast to java.util.List
at com.app.dev.cmon.controllers.MB_Main.getDataPerWeek(MB_Main.java:760)
at sun.reflect.GeneratedMethodAccessor9147.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at javax.el.BeanELResolver.invoke(BeanELResolver.java:165)





    public List<ViewInfo> getDataPerWeek(String type, String isNew) {
        String dateStr = sdf.format(radar.getDate1()).trim();
        String key = CacheService.getInstance().getCacheKey("DataPerWeek", type + "_" + isNew, viewId, subViewId, country, dateStr);
        
        List<ViewInfo> cachedResult = CacheService.getInstance().getFromCache(key);
        if (cachedResult != null && !cachedResult.isEmpty()) {
            return cachedResult;
        }
        
        List<ViewInfo> data = da.getCoveragePerWeek(viewId, subViewId, 
                country.equalsIgnoreCase("all") ? "" : country, type, viewText, dateStr);
        CacheService.getInstance().putInCache(key, data);
        return data;
    }
